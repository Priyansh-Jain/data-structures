#include <bits/stdc++.h>
using namespace std;

int mxm,maxnode;
bool visited[1000]={0};
vector<int>ar[1000];

// to find diameter of tree using tree we have to take dfs 2 times 
// 1 ->to find node that has mx distance from src
// 2->find max distance node from that node we have find above;

void diameter_tree_using_dfs(int src,int d)
{
    visited[src]=true;
    if(d>mxm)
    {
        mxm=d;
        maxnode=src;
    }
    
    for(int child:ar[src])
    {
        if(!visited[child])
        {
            diameter_tree_using_dfs(child,d+1);
        }
    }
}


int main()
{
    
    int edges,nodes,n,m;
    cin >> nodes >> edges;
    for(int i=0;i<edges;i++)
    {
        cin >> n >> m;
        ar[n].push_back(m);
        ar[m].push_back(n);
    }
    
    mxm=-1;
    diameter_tree_using_dfs(1,0);
    
    for(int i=1;i<=nodes;i++)
    {
        visited[i]=0;
    }
    
    mxm=-1;
    diameter_tree_using_dfs(maxnode,0);
    
    cout << mxm << endl;
    
}
